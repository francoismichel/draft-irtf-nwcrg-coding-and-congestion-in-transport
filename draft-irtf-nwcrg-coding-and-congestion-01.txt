


NWCRG                                                       N. Kuhn, Ed.
Internet-Draft                                                      CNES
Intended status: Informational                                 E. Lochin
Expires: July 11, 2020                                      ISAE-SUPAERO
                                                               F. Michel
                                                               UCLouvain
                                                                M. Welzl
                                                      University of Oslo
                                                        January 10, 2020

               Coding and congestion control in transport
               draft-irtf-nwcrg-coding-and-congestion-01

Abstract

   This document is the product of the Coding for Efficient Network
   Communications Research Group (NWCRG). The scope of the document is
   end-to-end communications: coding for tunnels is out-of-the scope of
   the document.

   Coding is a reliability mechanism that is distinct and separated from
   the loss detection of congestion controls.  Using coding can be a
   useful way to better deal with tail losses or with networks with non-
   congestion losses.  However, coding mechanisms should not hide
   congestion signals.  This memo offers a discussion of how coding and
   congestion control interact.

Status of this Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on July 11, 2020.










Kuhn, Lochin, Michel & WeExpires July 11, 2020                  [Page 1]

Internet-Draft           Coding and congestion              January 2020

Copyright Notice

   Copyright (c) 2020 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (http://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Simplified BSD License text
   as described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Simplified BSD License.

Table of Contents

   1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  2
   2.  Separate channels, separate entities . . . . . . . . . . . . .  3
   3.  Scope  . . . . . . . . . . . . . . . . . . . . . . . . . . . .  4
     3.1.  Type of application  . . . . . . . . . . . . . . . . . . .  4
     3.2.  End-to-end . . . . . . . . . . . . . . . . . . . . . . . .  4
   4.  Base solution description  . . . . . . . . . . . . . . . . . .  4
   5.  Server-side coding solutions . . . . . . . . . . . . . . . . .  5
     5.1.  Coded packets without considering CWND progression . . . .  5
     5.2.  Coded packets driven by CWND progression . . . . . . . . .  5
   6.  Server-side reaction to repaired packet signals  . . . . . . .  6
     6.1.  The server congestion control considers repaired packet
           signals as congestion-implied packet losses  . . . . . . .  6
     6.2.  The server adapts its window reduction to repaired packet
           signals  . . . . . . . . . . . . . . . . . . . . . . . . .  6
     6.3.  The server ignores repaired packet signals . . . . . . . .  7
   7.  Summary  . . . . . . . . . . . . . . . . . . . . . . . . . . .  7
   8.  Acknowledgements . . . . . . . . . . . . . . . . . . . . . . .  8
   9.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . .  8
   10. Security Considerations  . . . . . . . . . . . . . . . . . . .  8
   11. References . . . . . . . . . . . . . . . . . . . . . . . . . .  8
   Authors' Addresses . . . . . . . . . . . . . . . . . . . . . . . .  9

1.  Introduction

   This document represents the collaborative work and consensus of the
   Coding for Efficient Network Communications Research Group (NWCRG);
   it is not an IETF product and is not a standard.












Kuhn, Lochin, Michel & WeExpires July 11, 2020                  [Page 2]

Internet-Draft           Coding and congestion              January 2020


   There are cases where deploying coding improves the quality of the
   transmission.  As an example, the server may hardly detect tail
   losses that impact may impact the application layer [MICHAEL: I don't
   understand this.  Why would it not detect them?  And why is detecting
   them the problem?].  Another example are networks where non-
   congestion losses are persistent and prevent a sender from exploiting
   the link capacity.  [RFC5681] defines TCP as a loss-based congestion
   control; because coding repairs such losses, blindly applying it may
   easily lead to an implementation that also hides a congestion signal
   to the sender.  It is important to ensure that such information
   hiding does not occur.

   Coding is a reliability mechanism that is distinct and separated from
   the loss detection of congestion controls.  This memo discusses
   simple best practices on how coding and congestion control mechanisms
   could coexist.  One objective is to help the research community
   consider congestion control aspects when proposing coding solutions.

   The proposed recommendations apply for coding at the transport or
   application layer.  Coding for tunnels is out of scope for the
   document.

2.  Separate channels, separate entities

   Figure 1 presents the notations that will be used in this document
   and introduce the Congestion Control (CC) and Forward Erasure
   Correction (FEC) channels.  The Congestion Control channel carries
   data packets (from a server to a client) and a potential information
   signaling the packets that have been received (from the client to the
   server). The Forward Erasure Correction channel carries coded packets
   (from the server to the client) and a potiential information
   signaling the packets that have been repaired (from the client to the
   server). It is worth pointing out that there are cases where these
   channels are not separated.

    Client                          Server
   
   +------+                        +------+
   |      | -- { data packet  -----|      |
   |  CC  |                        |  CC  |
   |      | -- received packet } --|      |
   +------+                        +------+
   
   +------+                        +------+
   |      | -- { coded packet  ----|      |
   | FEC  |                        | FEC  |
   |      | -- repaired packet } --|      |
   +------+                        +------+

   Inside a host, the CC and FEC entities can be regarded as
   conceptually separate:



Kuhn, Lochin, Michel & WeExpires July 11, 2020                  [Page 3]

Internet-Draft           Coding and congestion              January 2020


                  |                  --------                  ^
                  | data             |      | data,            | sending
                  |                  |      | requirements     | rate (or
                  v                  |      v                  | window)
   +-----------------------------+   |    +-------------------------+
   |             FEC             | <----> |           CC            |
   +-----------------------------+   |    +-------------------------+
     ^                   |           |              ^
     | information       | coded     |              | network
     | about repaired    | data      |              | measurements
     | blocks            ------------               |

   As this diagram shows, the inputs to FEC (data to work upon, and
   signaling from the receiver about losses and/or repaired blocks) are
   distinct from the inputs to CC. The latter calculates a sending rate
   or window from network measurements, and it takes the data to send as
   input, sometimes along with application requirements such as upper/
   lower rate bounds, periods of quiescence, or a priority.

   It is not clear that the ACK signals feeding into a congestion
   control algorithm are useful to FEC in their raw form, and vice versa
   - information about repaired blocks may be quite irrelevant to a CC
   algorithm.  However, there can be meaningful other interactions
   (indicated by the horizontal double arrow) between the two entities,
   usually as a result of their operation rather than by relaying their
   own raw inputs.  For example, the network measurements carried out by
   CC can yield a longer-term statistical measure such as a loss ratio
   which is useful input for a FEC coding scheme.  Similarly, unequal
   error protection using fountain codes can be used to assign different
   priorities to blocks of data, and these priorities can be honored by
   a CC mechanism.

3.  Scope

   This section describes the scope of the document.

3.1.  Type of application

   The document focuses on reliable transmissions.

3.2.  End-to-end

   The document focuses on end-to-end coding, i.e.  cases where coding
   is added at the server and client end points.  The discussions should
   then consider fairness with non-coding solutions.

4.  Base solution description

   The solution can be described as follows: [MICHAEL: So far, it hasn't
   been clear that we're going to describe a "solution".  A solution to
   which problem?  I thought we're only discussing how FEC and CC
   relate.]


Kuhn, Lochin, Michel & WeExpires July 11, 2020                  [Page 4]

Internet-Draft           Coding and congestion              January 2020


   o  The client indicates to the server that one or multiple packets
      have been repaired using a coding scheme.  The "repaired packet"
      signal does not guarantee that the packet actually needed to be
      repaired, since it could have been delayed but not lost.

   o  The server must be able to detect the "repaired packet" signal.
      The base solution does not describe how the congestion control
      reacts to such signal.

   The rationale behind this solution is the following: the server has
   more information on the congestion status and the application
   characteristics.  Moreover, congestion control should not be split
   between multiple entities, as otherwise non-optimized decisions may
   be taken.

   The proposed solution applies for coding in the transport and
   application layers.  The proposed approach is in-line with the one in
   [I-D.swett-nwcrg-coding-for-quic].  The proposed solution does not
   apply for the interaction between coding under the transport layer
   (i.e.  not end-to-end), such as coding for tunnels.

5.  Server-side coding solutions

   This section presents solutions for a server to add application
   coding.

5.1.  Coded packets without considering CWND progression

   In this solution, the coded packets are sent on top of what is
   allowed by a congestion window.  Examples of the solution could be
   adding a given percentage of the congestion window as supplementary
   packets or sending a given amount of coded packets at a given rate.
   The redundancy flow can be decorrelated from the congestion control
   that manages source packets: a secondary congestion control can be
   introduced, such as in coupled congestion control for RTP media [I-D
   .ietf-rmcat-coupled-cc].  An example would be to exploit a lower than
   best-effort congestion control [RFC6297].

   The advantage of such a solution is that coding would help in
   challenging cases where transmission losses are persistent.

   The drawback of such a solution is that it may result in coding
   solutions being unfair towards non-coding solutions.  This solutions
   may result in adding congestion in congested networks.

5.2.  Coded packets driven by CWND progression

   In this solution, the coded packets are sent within what the
   congestion window allows, such as in [CTCP].  Examples of the
   solution would be sending coded packets when there is no more data to
   transmit or preferably send coded packets instead of the following
   packets in the send buffer.


Kuhn, Lochin, Michel & WeExpires July 11, 2020                  [Page 5]

Internet-Draft           Coding and congestion              January 2020


   The advantage of this solution is that it does not add more traffic
   than the congestion window allows.  Indeed, all traffic (source and
   redundancy) is controlled by one congestion control only and TCP
   metrics for fairness can be indifferently applied in this case.

   The main drawback is the decrease of goodput if coded packets are
   sent but are not used at the client side.

6.  Server-side reaction to repaired packet signals

   [MICHAEL: I would remove this section entirely: it only adds to
   confusion.  If the inputs are seen as distinct, and we say that the
   raw inputs shouldn't be shared, then why would one even think about
   what delay-based CC does with this input?  It's just not the right
   input.] Delay-based congestion controls ignore packets that have been
   repaired with coding.  There is no need to define best current
   pratices in this case.  However, more discussions are required for
   congestion controls that use loss as congestion signals (potentially
   among other congestion detection mechanism).

6.1.  The server congestion control considers repaired packet signals as
      congestion-implied packet losses

   [MICHAEL: As above, lets remove all of this please.  This text gets
   in the way of a clean separation.] In this solution, the server
   reacts to repaired packet signals as to congestion-implied packet
   losses.  That being said, this does not necessarily mean that the
   packets have actually been lost.  The server may have other means to
   identify that the packet was just out-of-order and ignore the
   repaired packet signals.

   The advantages of the solution are (1) that coding mechanisms do not
   hide congestion signals, such as packets voluntary dropped by a AQM
   [RFC7567] and (2) packets may be repaired faster than with a
   traditional retransmission mechanisms.

   The drawback of this solution is that, if there is a high non-
   congestion loss rate, the congestion control throughput may decrease
   drastically.  Reporting this amount of loss to a server may reduce
   the application goodput when there is no actual congestion.

6.2.  The server adapts its window reduction to repaired packet signals

   [MICHAEL: this is even just a terrible idea.  There's no good
   rationale to back off less when a packet is repaired.] In this
   solution, the server does not reduce the congestion window with the
   same amount when the "repaired packet" signal is received, i.e.  when
   a packet has been lost but repaired.  Example of this solution could
   be based on [RFC8511] or considering that recovering an isolated
   packet is not an actual sign of congestion.




Kuhn, Lochin, Michel & WeExpires July 11, 2020                  [Page 6]

Internet-Draft           Coding and congestion              January 2020


   The advantage of the solution is that in cases where there is no
   actual congestion, coding could help in improving the transmission
   without ignoring congestion signals.

   The main drawback is the precised design of the solution and its
   interaction with AQM mechanisms [RFC7567].  Moreover there may be
   fairness issues since AIMD convergence may not be guaranteed.

6.3.  The server ignores repaired packet signals

   [MICHAEL: as above, also here, the signals are discussed as going
   into both blocks, leading to a strange unification of things that
   shouldn't be together.  Let's remove this.  Also, the idea of
   ignoring packet loss for CC is appalling anyway.] This is the case
   for delay-based congestion controls.  The interaction between delay-
   based congestion controls and the delay induced by a coding
   mechanisms is an open research activity.  That being said, a
   potential approach would be that loss-based congestion control
   ignores the "repaired packet" signal.

   The advantage of this solution is that coding would provided
   substantial benefits in cases where there are transmission losses.

   However, this solution hides potential congestion losses, making it
   unfair to other congestion controls.

7.  Summary

   [MICHAEL: I'm sorry to say that I find this table to be in the same
   style, of wrongly mixing things together, and would like to see it
   removed altogether.] This section provides a summary on the content
   in previous sections.  The Figure 3 sums up some recommendations.  It
   is worth pointing out that the "coding without congestion" considers
   that coded packets are sent along with original data packets, in
   opposition with the solution where coded packets are transmitted only
   when there is no more original packets to transmit.  Moreover, the
   values indicated in this Figure consider a channel that does not
   exhibit a high loss pattern.
















Kuhn, Lochin, Michel & WeExpires July 11, 2020                  [Page 7]

Internet-Draft           Coding and congestion              January 2020


   +-----------------------+--------------------------------+
   | Server-side reaction  | Server-side coding solutions   |
   | to repaired packet    |                                |
   | signals               |                                |
   |                       +---------------+----------------+
   |                       | Coding adding | Coding without |
   |                       | congestion    | congestion     |
   +-----------------------+---------------+----------------+
   | React as loss         | fairness: ~   | fairness: ++   |
   |                       | real-time: +  | real-time: +   |
   |                       | bulk: ~       | bulk:  -       |
   +-----------------------+---------------+----------------+
   | Adapt window reduction| fairness: ~   | fairness: +    |
   |                       | real-time: +  | real-time: +   |
   |                       | bulk: +       | bulk: -        |
   +-----------------------+---------------+----------------+
   | Ignore signals        | fairness: -   | fairness: -    |
   |                       | real-time: +  | real-time: +   |
   |                       | bulk: +       | bulk: -        |
   +-----------------------+---------------+----------------+

8.  Acknowledgements

   Many thanks to Spencer Dawkins, Dave Oran, Carsten Bormann, Vincent
   Roca and Marie-Jose Montpetit for their useful comments that helped
   improve the document.

9.  IANA Considerations

   This memo includes no request to IANA.

10.  Security Considerations

   There is no security considerations required for this document.

11.  References

   [CTCP]     Kim (et al.), M., "Network Coded TCP (CTCP)", arXiv
              1212.2291v3, 2013.

   [I-D.ietf-rmcat-coupled-cc]
              Islam, S., Welzl, M. and S. Gjessing, "Coupled congestion
              control for RTP media", Internet-Draft draft-ietf-rmcat-
              coupled-cc-09, August 2019.

   [I-D.swett-nwcrg-coding-for-quic]
              Swett, I., Montpetit, M., Roca, V. and F. Michel, "Coding
              for QUIC", Internet-Draft draft-swett-nwcrg-coding-for-
              quic-03, July 2019.

   [RFC5681]  Allman, M., Paxson, V. and E. Blanton, "TCP Congestion
              Control", RFC 5681, DOI 10.17487/RFC5681, September 2009,
              <http://www.rfc-editor.org/info/rfc5681>.

Kuhn, Lochin, Michel & WeExpires July 11, 2020                  [Page 8]

Internet-Draft           Coding and congestion              January 2020


   [RFC6297]  Welzl, M. and D. Ros, "A Survey of Lower-than-Best-Effort
              Transport Protocols", RFC 6297, DOI 10.17487/RFC6297, June
              2011, <https://www.rfc-editor.org/info/rfc6297>.

   [RFC7567]  Baker, F.Ed.,  and G. Fairhurst, Ed., "IETF
              Recommendations Regarding Active Queue Management", BCP
              197, RFC 7567, DOI 10.17487/RFC7567, July 2015, <http://
              www.rfc-editor.org/info/rfc7567>.

   [RFC8511]  Khademi, N., Welzl, M., Armitage, G. and G. Fairhurst,
              "TCP Alternative Backoff with ECN (ABE)", RFC 8511, DOI
              10.17487/RFC8511, December 2018, <https://www.rfc-
              editor.org/info/rfc8511>.

Authors' Addresses

   Nicolas Kuhn, editor
   CNES
   
   Email: nicolas.kuhn@cnes.fr


   Emmanuel Lochin
   ISAE-SUPAERO
   
   Email: emmanuel.lochin@isae-supaero.fr


   Francois Michel
   UCLouvain
   
   Email: francois.michel@uclouvain.be


   Michael Welzl
   University of Oslo
   
   Email: michawe@ifi.uio.no















Kuhn, Lochin, Michel & WeExpires July 11, 2020                  [Page 9]
