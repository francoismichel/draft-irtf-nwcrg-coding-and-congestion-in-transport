<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc strict="yes" ?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
<rfc 
	category="info" 
        docName="draft-irtf-nwcrg-coding-and-congestion-01"
	ipr="trust200902">
  <!-- category values: std, bcp, info, exp, and historic
     ipr values: full3667, noModification3667, noDerivatives3667
     you can add the attributes updates="NNNN" and obsoletes="NNNN" 
     they will automatically be output with "(if approved)" -->

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the 
         full title is longer than 39 characters -->

    <title abbrev="Coding and congestion">Coding and congestion control in transport</title>

    <author role="editor" fullname="Nicolas Kuhn" initials="N" surname="Kuhn">
      <organization>CNES</organization>
      <address>
      <email>nicolas.kuhn@cnes.fr</email>
      </address>
    </author>
	  
    <author fullname="Emmanuel Lochin" initials="E" surname="Lochin">
      <organization>ISAE-SUPAERO</organization>
      <address>
      <email>emmanuel.lochin@isae-supaero.fr</email>
      </address>
    </author>

    <author fullname="Francois Michel" initials="F" surname="Michel">
      <organization>UCLouvain</organization>
      <address>
      <email>francois.michel@uclouvain.be</email>
      </address>
    </author>

    <author fullname="Michael Welzl" initials="M" surname="Welzl">
      <organization>University of Oslo</organization>
      <address>
      <email>michawe@ifi.uio.no</email>
      </address>
    </author>
	  
    <date year="2019" />

    <!-- If the month and year are both specified and are the current ones, xml2rfc will fill 
         in the current day for you. If only the current year is specified, xml2rfc will fill 
	 in the current day and month for you. If the year is not the current one, it is 
	 necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the 
	 purpose of calculating the expiry date).  With drafts it is normally sufficient to 
	 specify just the year. -->

    <!-- Meta-data Declarations -->

    <area>Transport</area>

    <workgroup>NWCRG</workgroup>

    <!-- WG name at the upperleft corner of the doc,
         IETF is fine for individual submissions.  
	 If this element is not present, the default is "Network Working Group",
         which is used by the RFC Editor as a nod to the history of the IETF. -->

    <keyword>Coding, congestion</keyword>

    <!-- Keywords will be incorporated into HTML output
         files in a meta tag but they have no effect on text or nroff
         output. If you submit your draft to the RFC Editor, the
         keywords will be used for the search engine. -->

        <!-- ######################################################-->
        <!-- ######################################################-->
        <!-- Head of the document -->
        <!-- ######################################################--> 
        <!-- ######################################################--> 

    <abstract>
    	<t>This document discusses the interaction between congestion control and coding mechanism at the transport layer. The scope of the document is end-to-end communications. Examples of interest for the proposed solution is to better deal with tail losses or with networks with non-congestion losses. Coding for tunnels is out-of-the scope of the document.</t>
    </abstract>
  </front>

  <middle>

	<section anchor="sec:introduction" title="Introduction">
		<t>There are cases where deploying coding improves the quality of the transmission. As example, the server may hardly detect tail losses that impact may impact the application layer. Another example may be the networks where non-congestion losses are persistent and prevent the server from exploiting the link capacity. <xref target="RFC5681"/> defines TCP as a loss-based congestion control and coding mechanisms can hide congestion signals to the server. This memo discusses simple best practices on how coding and congestion control mechanisms could coexist.</t> 
		<t>The proposed recommendations apply for coding at the transport or application layer and coding for tunnels is out-of-the scope of the document.</t>
	</section>

        <!-- ######################################################-->
        <!-- ######################################################-->
        <!-- Body of the document -->
        <!-- ######################################################--> 
        <!-- ######################################################--> 

        <!-- ######################################################-->
        <!-- New section -->
        <!-- ######################################################-->
        <section anchor="sec:notations" title="Separate channels">
		<t><xref target="fig:sep-channel"></xref> presents the notations that will be used in this document and introduce the Congestion Control (CC) and Forward Erasure Correction (FEC) channels. Congestion Control channel carries data packets (from the server to the client) and a potential information signaling the packets that have been received (from the client to the server). Forward Erasure Correction channel carries coded packets (from the server to the client) and a potiential information signaling the packets that have been repaired (from the client to the server). It is worth pointing out that there are cases where these channels are not separated.</t>
		<figure anchor="fig:sep-channel" title="Notations and separate channels">
		<artwork>
 Client                          Server

+------+                        +------+
|      | -- { data packet  -----|      |
|  CC  |                        |  CC  | 
|      | -- received packet } --|      |
+------+                        +------+

+------+                        +------+
|      | -- { coded packet  ----|      |
| FEC  |                        | FEC  |
|      | -- repaired packet } --|      |
+------+                        +------+
		</artwork>
		</figure>
	</section>

        <!-- ######################################################-->
        <!-- New section -->
        <!-- ######################################################-->
        <section anchor="sec:bcp" title="Base solution description">
		<t>The base solution can be described as follows:<list style="symbols">
			<t>The client MUST indicate to the server that one or multiple packets have been recovered using a coding scheme. Such "repaired packet signal" could be based on existing signals (even if the existing signal was not designed for that purpose, such as ECN) or on new type of signals (such as a RECOVERED frame in QUIC).</t>
			<t>The server MUST be able to detect the "recovered packet signal". The base solution does not describe how the server reacts to such signal.</t></list></t> 
		<t>The proposed solution applies for coding in the transport layer. The proposed approach is inline with the one in <xref target="I-D.swett-nwcrg-coding-for-quic"/>. The proposed solution does not applies for the interaction between coding under the transport layer (i.e. not end-to-end), such as coding for tunnels.</t>
	</section>

	<!-- ######################################################-->
        <!-- New section -->
        <!-- ######################################################-->
	<section anchor="bcp-base-sol-coding" title="Server-side coding solutions">
		<t>This section presents solutions for a server to add application coding.</t>
		<section anchor="bcp-base-sol-coding-cong" title="Coded packets without considering CWND progression">
			<t>In this solution, the coded packets are sent on top of what is allowed by a congestion window. Examples of the solution could be adding a given pourcentage of the congestion window as supplementary packets or sending a given amount of coded packets at a given rate. The redundancy flow can be decorrelated from the congestion control that manages source packets : a secondary congestion control can be introduced, such as in coupled congestion control for RTP media <xref target="I-D.ietf-rmcat-coupled-cc"/>. An example would be to exploit a lower than best-effort congestion control <xref target="RFC6297"/>.</t>
			<t>The advantage of such solution is that coding would help in challenges cases where transmission losses are persistent.</t>
			<t>The drawback of such solution is that it may result in coding solutions being unfair towards non-coding solutions. This solutions may result in adding congestion in congested networks.</t>
		</section>
		
		<section anchor="bcp-base-sol-coding-no-cong" title="Coded packets driven by CWND progression">
			<t>In this solution, the coded packets are sent within what the congestion window allows, such as in <xref target="CTCP"/>. Examples of the solution would be sending coded packets when there is no more data to transmit or preferably send coded packets instead of the following packets in the send buffer.</t>
			<t>The advantage of this solution is that it does not contribute in adding more congestion than the congestion window allows. Indeed, all traffic (source and redundancy) is controlled by one congestion control only and TCP metrics for fairness can be indifferently applied in this case.</t>
			<t>The main drawback is the decrease of goodput if coded packets are sent but are not used at the client side.</t>
		</section>
		
	</section>

	<!-- ######################################################-->
        <!-- New section -->
        <!-- ######################################################-->
	<section anchor="bcp-base-sol-impro" title="Server-side reaction to recovered packet signals">
		<t>Delay-based congestion controls ignore packets that have been repaired with coding. There is no need to define best current pratices in this case. However, more discussions are required for congestion controls that use loss as congestion signals (potentially among other congestion detection mechanism).</t>

		<section anchor="bcp-base-sol-impro-loss" title="The server congestion control considers recovered packet signals as congestion-implied packet losses">
			<t>In this solution, the server reacts to recovered packet signals as to congestion-implied packet losses. That being said, this does not necessarily means that the packets have actually been lost. The server may have other means to identify that the packet was just out-of-ordered and ignore the recovered packet signals.</t>
			<t>The advantages of the solution are (1) that coding mechanisms do not hide congestion signals, such as packets voluntary dropped by a AQM <xref target="RFC7567"/> and (2) packets may be recovered faster than with traditionnal retransmission mechanisms.</t>
			<t>The drawback of this solution is that, if there is a high non-congestion loss rate, the congestion control throughput may decrease drastically. Reporting this amount of loss to a server may reduce the application goodput when there is no actual congestion.</t>
		</section>
		
		<section anchor="bcp-base-sol-impro-adapt-reduction" title="The server adapts its window reduction to recovered packet signals">
			<t>In this solution, the server does not reduce the congestion window with the same amount when the "recovered packet signal" is received, i.e. when a packet has been lost but recovered. Example of this solution could be based on <xref target="RFC8511"/> or considering that recovering an isolated packet is not an actual sign of congestion.</t>
			<t>The advantage of the solution is that in cases where there is no actual congestion, coding could help in improving the transmission without ignoring congestion signals.</t>
			<t>The main drawback is the precised design of the solution and its interaction with AQM mechanisms <xref target="RFC7567"/>. Moreover there may be fairness issues since AIMD convergence may not be guaranteed.</t>
		</section>
		
		<section anchor="bcp-base-sol-impro-ignore" title="The server ignores recovered packet signals">
			<t>This is the case for delay-based congestion controls. The interaction between delay-based congestion controls and the delay induced by a coding mechanisms is an open research activity. That being said, a potential approach would be that loss-based congestion control ignores the "recovered packet signal".</t>
			<t>The advantage of this solution is that coding would provided substantial benefits in cases where there are transmission losses.</t>
			<t>However, this solution hides potential congestion losses, making it unfair to other congestion controls.</t>
		</section>
		
		<!-- <t>In order to improve the base solution, the server could either:<list style="numbers">
			<t>Adapt the window reduction (e.g. such as in <xref target="RFC8511"/>).</t>
			<t>Allow itself to induce a limited amount of congestion in the network by sending more data than the congestion window allows.</t>
			<t>Ignore the repaired packet information. It is worth pointing out that in this case, the usage of coding may not result in any noticeable gain.</t></list></t>
		</section> -->
	</section>

	  
	<!-- ######################################################-->
        <!-- New section -->
        <!-- ######################################################-->
    <section anchor="summary" title="Summary">
        <t>This section provides a summary on the content in previous sections. The <xref target="fig:summary"></xref> sums up some recommendations. It is worth pointing out that the "coding without congestion" considers that coded packets are sent along with original data packets, in opposition with the solution where coded packets are transmitted only when there is no more original packets to transmit. Moreover, the values indicated in this Figure consider a channel that does not exhibit a high loss pattern.</t>
    <figure anchor="fig:summary" title="Recommendations">
        <artwork>
+-----------------------+--------------------------------+
| Server-side reaction  | Server-side coding solutions   |
| to recovered packet   |                                |
| signals               |                                |
|                       +---------------+----------------+
|                       | Coding adding | Coding without |
|                       | congestion    | congestion     |
+-----------------------+---------------+----------------+
| React as loss         | fairness: ~   | fairness: ++   |
|                       | real-time: +  | real-time: +   |
|                       | bulk: ~       | bulk:  -       |
+-----------------------+---------------+----------------+
| Adapt window reduction| fairness: ~   | fairness: +    |
|                       | real-time: +  | real-time: +   |
|                       | bulk: +       | bulk: -        |
+-----------------------+---------------+----------------+
| Ignore signals        | fairness: -   | fairness: -    |
|                       | real-time: +  | real-time: +   |
|                       | bulk: +       | bulk: -        |
+-----------------------+---------------+----------------+
        </artwork>
        </figure>
    </section>

        <!-- ######################################################-->
        <!-- ######################################################-->
        <!-- Tail of the document -->
        <!-- ######################################################--> 
        <!-- ######################################################--> 

	<section anchor="sec:acknowledgements" title="Acknowledgements">
	<t>Many thanks to Spencer Dawkins, Dave Oran, Carsten Bormann, Vincent Roca and Marie-Jose Montpetit for their useful comments that helped improve the document.</t>
	</section>

	<section anchor="sec:IANA" title="IANA Considerations">
	<t>This memo includes no request to IANA.</t>
	</section>

	<section anchor="sec:ecurity" title="Security Considerations">
	<t>There is no security considerations required for this document.</t>
	</section>
	</middle>

	<!--  *****BACK MATTER ***** -->
	<back>
	<!-- References split into informative and normative -->
	<!-- There are 2 ways to insert reference entries from the citation libraries:
	1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
	2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
	(for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")
	Both are cited textually in the same manner: by using xref elements.
	If you use the PI option, xml2rfc will, by default, try to find included files in the same
	directory as the including file. You can also define the XML_LIBRARY environment variable
	with a value containing a set of directories to search.  These can be either in the local
	filing system or remote ones accessed by http (http://domain/dir/... ).-->

	<!-- <references title="Normative References">
		&RFC2119;
	</references> -->

	<references title="Informative References">
		<!-- <?rfc include="reference.RFC.3168.xml"?> -->             
		<?rfc include="reference.RFC.5681.xml"?>             
		<?rfc include="reference.RFC.6297.xml"?>             
		<?rfc include="reference.RFC.7567.xml"?>                          
		<?rfc include="reference.RFC.8511.xml"?>
		<?rfc include="reference.I-D.ietf-rmcat-coupled-cc.xml"?>  
		<!-- <?rfc include="reference.I-D.ietf-tcpm-rto-consider.xml"?> -->           
		<!-- <?rfc include="reference.I-D.ietf-tcpm-rack.xml"?> -->
		<?rfc include="reference.I-D.swett-nwcrg-coding-for-quic.xml"?>
		<reference anchor="CTCP">
			<front>
				<title>Network Coded TCP (CTCP)</title>
					<author initials="M" surname="Kim (et al.)">
					</author>
					<date year="2013"/>
				</front>
				<seriesInfo name="arXiv" value="1212.2291v3"/>
			</reference>
       	</references>
	</back>
</rfc>
